;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 22:13:28.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe                                                     
Maxima script file for nth order B-spline Nn(x) calculation            
====================================================================== 
WARNING: DEFUN/DEFMACRO: redefining function $POCHHAMMER in
         C:\maxima-5.38.1\share\maxima\5.38.1_5_gdf93b7b_dirty\share\orthopoly\orthopoly.lisp,
         was defined in top-level
------------------------------------------------------- 
          1  n+1        (n+1)                           
 Nn(x) = --- SUM (-1)^k (   ) (x-k)^n step(x-k) ,n= 2 
          n! k=0        ( k )                           
------------------------------------------------------- 
2 N_ 2 (x)=  0  for x<=0 
2 N_ 2 (x)=  x^2  for  0 <x< 1 
2 N_ 2 (x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N_ 2 (x)=  x^2-6*x+9  for  2 <x< 3 
2 N_ 2 (x)=  0  for x> 3 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 22:13:29.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 22:18:12.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe                                                     
Maxima script file for nth order B-spline Nn(x) calculation            
====================================================================== 
WARNING: DEFUN/DEFMACRO: redefining function $POCHHAMMER in
         C:\maxima-5.38.1\share\maxima\5.38.1_5_gdf93b7b_dirty\share\orthopoly\orthopoly.lisp,
         was defined in top-level
------------------------------------------------------- 
          1  n+1        (n+1)                           
 Nn(x) = --- SUM (-1)^k (   ) (x-k)^n step(x-k) ,n= 2 
          n! k=0        ( k )                           
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 22:18:13.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 22:59:13.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
          1  n+1        (n+1)                           
 Nn(x) = --- SUM (-1)^k (   ) (x-k)^n step(x-k) ,n= 2 
          n! k=0        ( k )                           
       =  
         (x^2*unit_step(x))/2-(3*unit_step(x-1)*x^2)/2
                             +(3*unit_step(x-2)*x^2)/2-(unit_step(x-3)*x^2)/2
                             +3*unit_step(x-1)*x-6*unit_step(x-2)*x
                             +3*unit_step(x-3)*x-(3*unit_step(x-1))/2
                             +6*unit_step(x-2)-(9*unit_step(x-3))/2 
       =  
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 22:59:14.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 22:59:51.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
          1  n+1        (n+1)                           
 Nn(x) = --- SUM (-1)^k (   ) (x-k)^n step(x-k) ,n= 2 
          n! k=0        ( k )                           
       =  
         (x^2*unit_step(x))/2-(3*unit_step(x-1)*x^2)/2
                             +(3*unit_step(x-2)*x^2)/2-(unit_step(x-3)*x^2)/2
                             +3*unit_step(x-1)*x-6*unit_step(x-2)*x
                             +3*unit_step(x-3)*x-(3*unit_step(x-1))/2
                             +6*unit_step(x-2)-(9*unit_step(x-3))/2 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 22:59:51.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:01:06.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
             n+1        (n+1)                           
 n! Nn(x) = --- SUM (-1)^k (   ) (x-k)^n step(x-k) ,n= 2 
             k=0        ( k )                           
          =  
            (x^2*unit_step(x))/2-(3*unit_step(x-1)*x^2)/2
                                +(3*unit_step(x-2)*x^2)/2
                                -(unit_step(x-3)*x^2)/2+3*unit_step(x-1)*x
                                -6*unit_step(x-2)*x+3*unit_step(x-3)*x
                                -(3*unit_step(x-1))/2+6*unit_step(x-2)
                                -(9*unit_step(x-3))/2 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:01:06.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:04:55.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1        (n+1)      n                    
 n! Nn(x) = SUM (-1)^k (   ) (x-k)  step(x-k) ,n= 2 
            k=0        ( k )                           
             3       3      2 
2 Nn(x) =  SUM (-1)^k (   ) (x-k) step(x-k) 
            k=0        ( k )                           
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:04:55.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:05:27.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1        (n+1)      n                    
 n! Nn(x) = SUM (-1)^k (   ) (x-k)  step(x-k) ,n= 2 
            k=0        ( k )                           
             3       3      2 
2 !Nn(x) =  SUM (-1)^k (   ) (x-k) step(x-k) 
            k=0        ( k )                           
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:05:27.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:05:44.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1        (n+1)      n                    
 n! Nn(x) = SUM (-1)^k (   ) (x-k)  step(x-k) ,n= 2 
            k=0        ( k )                           
             3       3      2 
2 ! Nn(x) =  SUM (-1)^k (   ) (x-k) step(x-k) 
            k=0        ( k )                           
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:05:44.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:06:13.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1        (n+1)      n                    
 n! Nn(x) = SUM (-1)^k (   ) (x-k)  step(x-k) ,n= 2 
            k=0        ( k )                           
              3       3      2 
2 ! Nn(x) =  SUM (-1)^k (   ) (x-k) step(x-k) 
             k=0        ( k ) 
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:06:13.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:06:57.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1        (n+1)      n                    
 n! Nn(x) = SUM (-1)^k (   ) (x-k)  step(x-k) ,n= 2 
            k=0        ( k )                           
              3      ( 3 )     2 
2 ! Nn(x) =  SUM (-1)^k (   ) (x-k) step(x-k) 
             k=0        ( k ) 
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:06:58.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:07:12.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1        (n+1)      n                    
 n! Nn(x) = SUM (-1)^k (   ) (x-k)  step(x-k) ,n= 2 
            k=0        ( k )                           
              3         ( 3 )     2 
2 ! Nn(x) =  SUM (-1)^k (   ) (x-k) step(x-k) 
             k=0        ( k ) 
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:07:12.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:07:31.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1        (n+1)      n                    
 n! Nn(x) = SUM (-1)^k (   ) (x-k)  step(x-k) ,n= 2 
            k=0        ( k )                           
              3         ( 3 )      2 
2 ! Nn(x) =  SUM (-1)^k (   ) (x-k) step(x-k) 
             k=0        ( k ) 
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:07:31.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:07:38.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1        (n+1)      n                    
 n! Nn(x) = SUM (-1)^k (   ) (x-k)  step(x-k) ,n= 2 
            k=0        ( k )                           
              3         ( 3 )      2 
2 ! Nn(x) =  SUM (-1)^k (   ) (x-k)  step(x-k) 
             k=0        ( k ) 
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:07:38.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:08:08.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1        (n+1)      n                    
 n! Nn(x) = SUM (-1)^k (   ) (x-k)  step(x-k) ,n= 2 
            k=0      ( k )                           
              3  k    ( 3 )      2 
2 ! Nn(x) =  SUM (-1) (   ) (x-k)  step(x-k) 
             k=0      ( k ) 
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:08:08.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:08:27.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1        (n+1)      n                    
 n! Nn(x) = SUM (-1)^k (   ) (x-k)  step(x-k) ,n= 2 
            k=0      ( k )                           
              3      k ( 3 )      2 
2 ! Nn(x) =  SUM (-1)  (   ) (x-k)  step(x-k) 
             k=0       ( k ) 
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:08:27.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:08:55.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
              3      k ( 3 )      2 
2 ! Nn(x) =  SUM (-1)  (   ) (x-k)  step(x-k) 
             k=0       ( k ) 
         =  
           x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                           -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                           -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                           -3*unit_step(x-1)+12*unit_step(x-2)
                           -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:08:55.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:09:17.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                            -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                            -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                            -3*unit_step(x-1)+12*unit_step(x-2)
                            -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N_ 2 ( 3/2 )=  3/4  (center value) 
N_ 2 ( 2 )=  1/2 
N_ 2 ( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:09:18.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:24:43.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 2 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                            -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                            -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                            -3*unit_step(x-1)+12*unit_step(x-2)
                            -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  3/4  (center value) 
N( 2 )=  1/2 
N( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:24:43.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:28:36.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 3 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 3 
            k=0       ( k )                           
             4      k ( 4 )      3 
3 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^3*unit_step(x)-4*unit_step(x-1)*x^3+6*unit_step(x-2)*x^3
                            -4*unit_step(x-3)*x^3+unit_step(x-4)*x^3
                            +12*unit_step(x-1)*x^2-36*unit_step(x-2)*x^2
                            +36*unit_step(x-3)*x^2-12*unit_step(x-4)*x^2
                            -12*unit_step(x-1)*x+72*unit_step(x-2)*x
                            -108*unit_step(x-3)*x+48*unit_step(x-4)*x
                            +4*unit_step(x-1)-48*unit_step(x-2)
                            +108*unit_step(x-3)-64*unit_step(x-4) 
------------------------------------------------------- 
6 N(x)=  0  for x<=0 
6 N(x)=  x^3  for  0 <x< 1 
6 N(x)=  (-3*x^3)+12*x^2-12*x+4  for  1 <x< 2 
6 N(x)=  3*x^3-24*x^2+60*x-44  for  2 <x< 3 
6 N(x)=  (-x^3)+12*x^2-48*x+64  for  3 <x< 4 
6 N(x)=  0  for x> 4 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 2 )=  2/3  (center value) 
N( 5/2 )=  23/48 
N( 3 )=  1/6 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:28:36.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-29 23:57:54.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 4 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 4 
            k=0       ( k )                           
             5      k ( 5 )      4 
4 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^4*unit_step(x)-5*unit_step(x-1)*x^4+10*unit_step(x-2)*x^4
                            -10*unit_step(x-3)*x^4+5*unit_step(x-4)*x^4
                            -unit_step(x-5)*x^4+20*unit_step(x-1)*x^3
                            -80*unit_step(x-2)*x^3+120*unit_step(x-3)*x^3
                            -80*unit_step(x-4)*x^3+20*unit_step(x-5)*x^3
                            -30*unit_step(x-1)*x^2+240*unit_step(x-2)*x^2
                            -540*unit_step(x-3)*x^2+480*unit_step(x-4)*x^2
                            -150*unit_step(x-5)*x^2+20*unit_step(x-1)*x
                            -320*unit_step(x-2)*x+1080*unit_step(x-3)*x
                            -1280*unit_step(x-4)*x+500*unit_step(x-5)*x
                            -5*unit_step(x-1)+160*unit_step(x-2)
                            -810*unit_step(x-3)+1280*unit_step(x-4)
                            -625*unit_step(x-5) 
------------------------------------------------------- 
24 N(x)=  0  for x<=0 
24 N(x)=  x^4  for  0 <x< 1 
24 N(x)=  (-4*x^4)+20*x^3-30*x^2+20*x-5  for  1 <x< 2 
24 N(x)=  6*x^4-60*x^3+210*x^2-300*x+155  for  2 <x< 3 
24 N(x)=  (-4*x^4)+60*x^3-330*x^2+780*x-655  for  3 <x< 4 
24 N(x)=  x^4-20*x^3+150*x^2-500*x+625  for  4 <x< 5 
24 N(x)=  0  for x> 5 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 5/2 )=  115/192  (center value) 
N( 3 )=  11/24 
N( 7/2 )=  19/96 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-29 23:57:55.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-30 00:04:25.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 5 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 5 
            k=0       ( k )                           
             6      k ( 6 )      5 
5 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^5*unit_step(x)-6*unit_step(x-1)*x^5+15*unit_step(x-2)*x^5
                            -20*unit_step(x-3)*x^5+15*unit_step(x-4)*x^5
                            -6*unit_step(x-5)*x^5+unit_step(x-6)*x^5
                            +30*unit_step(x-1)*x^4-150*unit_step(x-2)*x^4
                            +300*unit_step(x-3)*x^4-300*unit_step(x-4)*x^4
                            +150*unit_step(x-5)*x^4-30*unit_step(x-6)*x^4
                            -60*unit_step(x-1)*x^3+600*unit_step(x-2)*x^3
                            -1800*unit_step(x-3)*x^3+2400*unit_step(x-4)*x^3
                            -1500*unit_step(x-5)*x^3+360*unit_step(x-6)*x^3
                            +60*unit_step(x-1)*x^2-1200*unit_step(x-2)*x^2
                            +5400*unit_step(x-3)*x^2-9600*unit_step(x-4)*x^2
                            +7500*unit_step(x-5)*x^2-2160*unit_step(x-6)*x^2
                            -30*unit_step(x-1)*x+1200*unit_step(x-2)*x
                            -8100*unit_step(x-3)*x+19200*unit_step(x-4)*x
                            -18750*unit_step(x-5)*x+6480*unit_step(x-6)*x
                            +6*unit_step(x-1)-480*unit_step(x-2)
                            +4860*unit_step(x-3)-15360*unit_step(x-4)
                            +18750*unit_step(x-5)-7776*unit_step(x-6) 
------------------------------------------------------- 
120 N(x)=  0  for x<=0 
120 N(x)=  x^5  for  0 <x< 1 
120 N(x)=  (-5*x^5)+30*x^4-60*x^3+60*x^2-30*x+6  for  1 <x< 2 
120 N(x)=  10*x^5-120*x^4+540*x^3-1140*x^2+1170*x-474  for  2 <x< 3 
120 N(x)=  (-10*x^5)+180*x^4-1260*x^3+4260*x^2-6930*x+4386  for  3 <x< 4 
120 N(x)=  5*x^5-120*x^4+1140*x^3-5340*x^2+12270*x-10974  for  4 <x< 5 
120 N(x)=  (-x^5)+30*x^4-360*x^3+2160*x^2-6480*x+7776  for  5 <x< 6 
120 N(x)=  0  for x> 6 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3 )=  11/20  (center value) 
N( 7/2 )=  841/1920 
N( 4 )=  13/60 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-30 00:04:25.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-30 00:14:09.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 6 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 6 
            k=0       ( k )                           
             7      k ( 7 )      6 
6 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^6*unit_step(x)-7*unit_step(x-1)*x^6+21*unit_step(x-2)*x^6
                            -35*unit_step(x-3)*x^6+35*unit_step(x-4)*x^6
                            -21*unit_step(x-5)*x^6+7*unit_step(x-6)*x^6
                            -unit_step(x-7)*x^6+42*unit_step(x-1)*x^5
                            -252*unit_step(x-2)*x^5+630*unit_step(x-3)*x^5
                            -840*unit_step(x-4)*x^5+630*unit_step(x-5)*x^5
                            -252*unit_step(x-6)*x^5+42*unit_step(x-7)*x^5
                            -105*unit_step(x-1)*x^4+1260*unit_step(x-2)*x^4
                            -4725*unit_step(x-3)*x^4+8400*unit_step(x-4)*x^4
                            -7875*unit_step(x-5)*x^4+3780*unit_step(x-6)*x^4
                            -735*unit_step(x-7)*x^4+140*unit_step(x-1)*x^3
                            -3360*unit_step(x-2)*x^3+18900*unit_step(x-3)*x^3
                            -44800*unit_step(x-4)*x^3+52500*unit_step(x-5)*x^3
                            -30240*unit_step(x-6)*x^3+6860*unit_step(x-7)*x^3
                            -105*unit_step(x-1)*x^2+5040*unit_step(x-2)*x^2
                            -42525*unit_step(x-3)*x^2
                            +134400*unit_step(x-4)*x^2
                            -196875*unit_step(x-5)*x^2
                            +136080*unit_step(x-6)*x^2
                            -36015*unit_step(x-7)*x^2+42*unit_step(x-1)*x
                            -4032*unit_step(x-2)*x+51030*unit_step(x-3)*x
                            -215040*unit_step(x-4)*x+393750*unit_step(x-5)*x
                            -326592*unit_step(x-6)*x+100842*unit_step(x-7)*x
                            -7*unit_step(x-1)+1344*unit_step(x-2)
                            -25515*unit_step(x-3)+143360*unit_step(x-4)
                            -328125*unit_step(x-5)+326592*unit_step(x-6)
                            -117649*unit_step(x-7) 
------------------------------------------------------- 
720 N(x)=  0  for x<=0 
720 N(x)=  x^6  for  0 <x< 1 
720 N(x)=  (-6*x^6)+42*x^5-105*x^4+140*x^3-105*x^2+42*x-7  for  1 <x< 2 
720 N(x)=  15*x^6-210*x^5+1155*x^4-3220*x^3+4935*x^2-3990*x+1337  for  2 <x< 3
    
720 N(x)=  (-20*x^6)+420*x^5-3570*x^4+15680*x^3-37590*x^2+47040*x-24178  for  
   3 <x< 4 
720 N(x)=  15*x^6-420*x^5+4830*x^4-29120*x^3+96810*x^2-168000*x+119182  for  4
    <x< 5 
720 N(x)=  (-6*x^6)+210*x^5-3045*x^4+23380*x^3-100065*x^2+225750*x-208943 
    for  5 <x< 6 
720 N(x)=  x^6-42*x^5+735*x^4-6860*x^3+36015*x^2-100842*x+117649  for  6 <x< 7
    
720 N(x)=  0  for x> 7 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 7/2 )=  5887/11520  (center value) 
N( 4 )=  151/360 
N( 9/2 )=  10543/46080 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-30 00:14:10.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-30 00:45:53.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima script file for nth order B-spline Nn(x) calculation, n= 7 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 7 
            k=0       ( k )                           
             8      k ( 8 )      7 
7 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^7*unit_step(x)-8*unit_step(x-1)*x^7+28*unit_step(x-2)*x^7
                            -56*unit_step(x-3)*x^7+70*unit_step(x-4)*x^7
                            -56*unit_step(x-5)*x^7+28*unit_step(x-6)*x^7
                            -8*unit_step(x-7)*x^7+unit_step(x-8)*x^7
                            +56*unit_step(x-1)*x^6-392*unit_step(x-2)*x^6
                            +1176*unit_step(x-3)*x^6-1960*unit_step(x-4)*x^6
                            +1960*unit_step(x-5)*x^6-1176*unit_step(x-6)*x^6
                            +392*unit_step(x-7)*x^6-56*unit_step(x-8)*x^6
                            -168*unit_step(x-1)*x^5+2352*unit_step(x-2)*x^5
                            -10584*unit_step(x-3)*x^5+23520*unit_step(x-4)*x^5
                            -29400*unit_step(x-5)*x^5+21168*unit_step(x-6)*x^5
                            -8232*unit_step(x-7)*x^5+1344*unit_step(x-8)*x^5
                            +280*unit_step(x-1)*x^4-7840*unit_step(x-2)*x^4
                            +52920*unit_step(x-3)*x^4
                            -156800*unit_step(x-4)*x^4
                            +245000*unit_step(x-5)*x^4
                            -211680*unit_step(x-6)*x^4
                            +96040*unit_step(x-7)*x^4-17920*unit_step(x-8)*x^4
                            -280*unit_step(x-1)*x^3+15680*unit_step(x-2)*x^3
                            -158760*unit_step(x-3)*x^3
                            +627200*unit_step(x-4)*x^3
                            -1225000*unit_step(x-5)*x^3
                            +1270080*unit_step(x-6)*x^3
                            -672280*unit_step(x-7)*x^3
                            +143360*unit_step(x-8)*x^3+168*unit_step(x-1)*x^2
                            -18816*unit_step(x-2)*x^2
                            +285768*unit_step(x-3)*x^2
                            -1505280*unit_step(x-4)*x^2
                            +3675000*unit_step(x-5)*x^2
                            -4572288*unit_step(x-6)*x^2
                            +2823576*unit_step(x-7)*x^2
                            -688128*unit_step(x-8)*x^2-56*unit_step(x-1)*x
                            +12544*unit_step(x-2)*x-285768*unit_step(x-3)*x
                            +2007040*unit_step(x-4)*x-6125000*unit_step(x-5)*x
                            +9144576*unit_step(x-6)*x-6588344*unit_step(x-7)*x
                            +1835008*unit_step(x-8)*x+8*unit_step(x-1)
                            -3584*unit_step(x-2)+122472*unit_step(x-3)
                            -1146880*unit_step(x-4)+4375000*unit_step(x-5)
                            -7838208*unit_step(x-6)+6588344*unit_step(x-7)
                            -2097152*unit_step(x-8) 
------------------------------------------------------- 
5040 N(x)=  0  for x<=0 
5040 N(x)=  x^7  for  0 <x< 1 
5040 N(x)=  (-7*x^7)+56*x^6-168*x^5+280*x^4-280*x^3+168*x^2-56*x+8  for  1 <x<
     2 
5040 N(x)=  21*x^7-336*x^6+2184*x^5-7560*x^4+15400*x^3-18648*x^2+12488*x-3576 
     for  2 <x< 3 
5040 N(x)=  
    (-35*x^7)+840*x^6-8400*x^5+45360*x^4-143360*x^3+267120*x^2-273280*x+118896
      for  3 <x< 4 
5040 N(x)=  
    35*x^7-1120*x^6+15120*x^5-111440*x^4+483840*x^3-1238160*x^2+1733760*x
          -1027984  for  4 <x< 5 
5040 N(x)=  
    (-21*x^7)+840*x^6-14280*x^5+133560*x^4-741160*x^3+2436840*x^2-4391240*x
             +3347016  for  5 <x< 6 
5040 N(x)=  
    7*x^7-336*x^6+6888*x^5-78120*x^4+528920*x^3-2135448*x^2+4753336*x-4491192 
     for  6 <x< 7 
5040 N(x)=  
    (-x^7)+56*x^6-1344*x^5+17920*x^4-143360*x^3+688128*x^2-1835008*x+2097152 
     for  7 <x< 8 
5040 N(x)=  0  for x> 8 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 4 )=  151/315  (center value) 
N( 9/2 )=  259723/645120 
N( 5 )=  397/1680 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-30 00:45:53.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-30 00:48:27.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Maxima output file for nth order B-spline Nn(x) calculation, n= 7 
  running scriptfile bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 7 
            k=0       ( k )                           
             8      k ( 8 )      7 
7 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^7*unit_step(x)-8*unit_step(x-1)*x^7+28*unit_step(x-2)*x^7
                            -56*unit_step(x-3)*x^7+70*unit_step(x-4)*x^7
                            -56*unit_step(x-5)*x^7+28*unit_step(x-6)*x^7
                            -8*unit_step(x-7)*x^7+unit_step(x-8)*x^7
                            +56*unit_step(x-1)*x^6-392*unit_step(x-2)*x^6
                            +1176*unit_step(x-3)*x^6-1960*unit_step(x-4)*x^6
                            +1960*unit_step(x-5)*x^6-1176*unit_step(x-6)*x^6
                            +392*unit_step(x-7)*x^6-56*unit_step(x-8)*x^6
                            -168*unit_step(x-1)*x^5+2352*unit_step(x-2)*x^5
                            -10584*unit_step(x-3)*x^5+23520*unit_step(x-4)*x^5
                            -29400*unit_step(x-5)*x^5+21168*unit_step(x-6)*x^5
                            -8232*unit_step(x-7)*x^5+1344*unit_step(x-8)*x^5
                            +280*unit_step(x-1)*x^4-7840*unit_step(x-2)*x^4
                            +52920*unit_step(x-3)*x^4
                            -156800*unit_step(x-4)*x^4
                            +245000*unit_step(x-5)*x^4
                            -211680*unit_step(x-6)*x^4
                            +96040*unit_step(x-7)*x^4-17920*unit_step(x-8)*x^4
                            -280*unit_step(x-1)*x^3+15680*unit_step(x-2)*x^3
                            -158760*unit_step(x-3)*x^3
                            +627200*unit_step(x-4)*x^3
                            -1225000*unit_step(x-5)*x^3
                            +1270080*unit_step(x-6)*x^3
                            -672280*unit_step(x-7)*x^3
                            +143360*unit_step(x-8)*x^3+168*unit_step(x-1)*x^2
                            -18816*unit_step(x-2)*x^2
                            +285768*unit_step(x-3)*x^2
                            -1505280*unit_step(x-4)*x^2
                            +3675000*unit_step(x-5)*x^2
                            -4572288*unit_step(x-6)*x^2
                            +2823576*unit_step(x-7)*x^2
                            -688128*unit_step(x-8)*x^2-56*unit_step(x-1)*x
                            +12544*unit_step(x-2)*x-285768*unit_step(x-3)*x
                            +2007040*unit_step(x-4)*x-6125000*unit_step(x-5)*x
                            +9144576*unit_step(x-6)*x-6588344*unit_step(x-7)*x
                            +1835008*unit_step(x-8)*x+8*unit_step(x-1)
                            -3584*unit_step(x-2)+122472*unit_step(x-3)
                            -1146880*unit_step(x-4)+4375000*unit_step(x-5)
                            -7838208*unit_step(x-6)+6588344*unit_step(x-7)
                            -2097152*unit_step(x-8) 
------------------------------------------------------- 
5040 N(x)=  0  for x<=0 
5040 N(x)=  x^7  for  0 <x< 1 
5040 N(x)=  (-7*x^7)+56*x^6-168*x^5+280*x^4-280*x^3+168*x^2-56*x+8  for  1 <x<
     2 
5040 N(x)=  21*x^7-336*x^6+2184*x^5-7560*x^4+15400*x^3-18648*x^2+12488*x-3576 
     for  2 <x< 3 
5040 N(x)=  
    (-35*x^7)+840*x^6-8400*x^5+45360*x^4-143360*x^3+267120*x^2-273280*x+118896
      for  3 <x< 4 
5040 N(x)=  
    35*x^7-1120*x^6+15120*x^5-111440*x^4+483840*x^3-1238160*x^2+1733760*x
          -1027984  for  4 <x< 5 
5040 N(x)=  
    (-21*x^7)+840*x^6-14280*x^5+133560*x^4-741160*x^3+2436840*x^2-4391240*x
             +3347016  for  5 <x< 6 
5040 N(x)=  
    7*x^7-336*x^6+6888*x^5-78120*x^4+528920*x^3-2135448*x^2+4753336*x-4491192 
     for  6 <x< 7 
5040 N(x)=  
    (-x^7)+56*x^6-1344*x^5+17920*x^4-143360*x^3+688128*x^2-1835008*x+2097152 
     for  7 <x< 8 
5040 N(x)=  0  for x> 8 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 4 )=  151/315  (center value) 
N( 9/2 )=  259723/645120 
N( 5 )=  397/1680 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-30 00:48:27.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-30 00:50:03.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 7  . 
Output produced using Maxima running the scriptfile bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 7 
            k=0       ( k )                           
             8      k ( 8 )      7 
7 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^7*unit_step(x)-8*unit_step(x-1)*x^7+28*unit_step(x-2)*x^7
                            -56*unit_step(x-3)*x^7+70*unit_step(x-4)*x^7
                            -56*unit_step(x-5)*x^7+28*unit_step(x-6)*x^7
                            -8*unit_step(x-7)*x^7+unit_step(x-8)*x^7
                            +56*unit_step(x-1)*x^6-392*unit_step(x-2)*x^6
                            +1176*unit_step(x-3)*x^6-1960*unit_step(x-4)*x^6
                            +1960*unit_step(x-5)*x^6-1176*unit_step(x-6)*x^6
                            +392*unit_step(x-7)*x^6-56*unit_step(x-8)*x^6
                            -168*unit_step(x-1)*x^5+2352*unit_step(x-2)*x^5
                            -10584*unit_step(x-3)*x^5+23520*unit_step(x-4)*x^5
                            -29400*unit_step(x-5)*x^5+21168*unit_step(x-6)*x^5
                            -8232*unit_step(x-7)*x^5+1344*unit_step(x-8)*x^5
                            +280*unit_step(x-1)*x^4-7840*unit_step(x-2)*x^4
                            +52920*unit_step(x-3)*x^4
                            -156800*unit_step(x-4)*x^4
                            +245000*unit_step(x-5)*x^4
                            -211680*unit_step(x-6)*x^4
                            +96040*unit_step(x-7)*x^4-17920*unit_step(x-8)*x^4
                            -280*unit_step(x-1)*x^3+15680*unit_step(x-2)*x^3
                            -158760*unit_step(x-3)*x^3
                            +627200*unit_step(x-4)*x^3
                            -1225000*unit_step(x-5)*x^3
                            +1270080*unit_step(x-6)*x^3
                            -672280*unit_step(x-7)*x^3
                            +143360*unit_step(x-8)*x^3+168*unit_step(x-1)*x^2
                            -18816*unit_step(x-2)*x^2
                            +285768*unit_step(x-3)*x^2
                            -1505280*unit_step(x-4)*x^2
                            +3675000*unit_step(x-5)*x^2
                            -4572288*unit_step(x-6)*x^2
                            +2823576*unit_step(x-7)*x^2
                            -688128*unit_step(x-8)*x^2-56*unit_step(x-1)*x
                            +12544*unit_step(x-2)*x-285768*unit_step(x-3)*x
                            +2007040*unit_step(x-4)*x-6125000*unit_step(x-5)*x
                            +9144576*unit_step(x-6)*x-6588344*unit_step(x-7)*x
                            +1835008*unit_step(x-8)*x+8*unit_step(x-1)
                            -3584*unit_step(x-2)+122472*unit_step(x-3)
                            -1146880*unit_step(x-4)+4375000*unit_step(x-5)
                            -7838208*unit_step(x-6)+6588344*unit_step(x-7)
                            -2097152*unit_step(x-8) 
------------------------------------------------------- 
5040 N(x)=  0  for x<=0 
5040 N(x)=  x^7  for  0 <x< 1 
5040 N(x)=  (-7*x^7)+56*x^6-168*x^5+280*x^4-280*x^3+168*x^2-56*x+8  for  1 <x<
     2 
5040 N(x)=  21*x^7-336*x^6+2184*x^5-7560*x^4+15400*x^3-18648*x^2+12488*x-3576 
     for  2 <x< 3 
5040 N(x)=  
    (-35*x^7)+840*x^6-8400*x^5+45360*x^4-143360*x^3+267120*x^2-273280*x+118896
      for  3 <x< 4 
5040 N(x)=  
    35*x^7-1120*x^6+15120*x^5-111440*x^4+483840*x^3-1238160*x^2+1733760*x
          -1027984  for  4 <x< 5 
5040 N(x)=  
    (-21*x^7)+840*x^6-14280*x^5+133560*x^4-741160*x^3+2436840*x^2-4391240*x
             +3347016  for  5 <x< 6 
5040 N(x)=  
    7*x^7-336*x^6+6888*x^5-78120*x^4+528920*x^3-2135448*x^2+4753336*x-4491192 
     for  6 <x< 7 
5040 N(x)=  
    (-x^7)+56*x^6-1344*x^5+17920*x^4-143360*x^3+688128*x^2-1835008*x+2097152 
     for  7 <x< 8 
5040 N(x)=  0  for x> 8 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 4 )=  151/315  (center value) 
N( 9/2 )=  259723/645120 
N( 5 )=  397/1680 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-30 00:50:04.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-04-30 00:50:43.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 7  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 7 
            k=0       ( k )                           
             8      k ( 8 )      7 
7 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^7*unit_step(x)-8*unit_step(x-1)*x^7+28*unit_step(x-2)*x^7
                            -56*unit_step(x-3)*x^7+70*unit_step(x-4)*x^7
                            -56*unit_step(x-5)*x^7+28*unit_step(x-6)*x^7
                            -8*unit_step(x-7)*x^7+unit_step(x-8)*x^7
                            +56*unit_step(x-1)*x^6-392*unit_step(x-2)*x^6
                            +1176*unit_step(x-3)*x^6-1960*unit_step(x-4)*x^6
                            +1960*unit_step(x-5)*x^6-1176*unit_step(x-6)*x^6
                            +392*unit_step(x-7)*x^6-56*unit_step(x-8)*x^6
                            -168*unit_step(x-1)*x^5+2352*unit_step(x-2)*x^5
                            -10584*unit_step(x-3)*x^5+23520*unit_step(x-4)*x^5
                            -29400*unit_step(x-5)*x^5+21168*unit_step(x-6)*x^5
                            -8232*unit_step(x-7)*x^5+1344*unit_step(x-8)*x^5
                            +280*unit_step(x-1)*x^4-7840*unit_step(x-2)*x^4
                            +52920*unit_step(x-3)*x^4
                            -156800*unit_step(x-4)*x^4
                            +245000*unit_step(x-5)*x^4
                            -211680*unit_step(x-6)*x^4
                            +96040*unit_step(x-7)*x^4-17920*unit_step(x-8)*x^4
                            -280*unit_step(x-1)*x^3+15680*unit_step(x-2)*x^3
                            -158760*unit_step(x-3)*x^3
                            +627200*unit_step(x-4)*x^3
                            -1225000*unit_step(x-5)*x^3
                            +1270080*unit_step(x-6)*x^3
                            -672280*unit_step(x-7)*x^3
                            +143360*unit_step(x-8)*x^3+168*unit_step(x-1)*x^2
                            -18816*unit_step(x-2)*x^2
                            +285768*unit_step(x-3)*x^2
                            -1505280*unit_step(x-4)*x^2
                            +3675000*unit_step(x-5)*x^2
                            -4572288*unit_step(x-6)*x^2
                            +2823576*unit_step(x-7)*x^2
                            -688128*unit_step(x-8)*x^2-56*unit_step(x-1)*x
                            +12544*unit_step(x-2)*x-285768*unit_step(x-3)*x
                            +2007040*unit_step(x-4)*x-6125000*unit_step(x-5)*x
                            +9144576*unit_step(x-6)*x-6588344*unit_step(x-7)*x
                            +1835008*unit_step(x-8)*x+8*unit_step(x-1)
                            -3584*unit_step(x-2)+122472*unit_step(x-3)
                            -1146880*unit_step(x-4)+4375000*unit_step(x-5)
                            -7838208*unit_step(x-6)+6588344*unit_step(x-7)
                            -2097152*unit_step(x-8) 
------------------------------------------------------- 
5040 N(x)=  0  for x<=0 
5040 N(x)=  x^7  for  0 <x< 1 
5040 N(x)=  (-7*x^7)+56*x^6-168*x^5+280*x^4-280*x^3+168*x^2-56*x+8  for  1 <x<
     2 
5040 N(x)=  21*x^7-336*x^6+2184*x^5-7560*x^4+15400*x^3-18648*x^2+12488*x-3576 
     for  2 <x< 3 
5040 N(x)=  
    (-35*x^7)+840*x^6-8400*x^5+45360*x^4-143360*x^3+267120*x^2-273280*x+118896
      for  3 <x< 4 
5040 N(x)=  
    35*x^7-1120*x^6+15120*x^5-111440*x^4+483840*x^3-1238160*x^2+1733760*x
          -1027984  for  4 <x< 5 
5040 N(x)=  
    (-21*x^7)+840*x^6-14280*x^5+133560*x^4-741160*x^3+2436840*x^2-4391240*x
             +3347016  for  5 <x< 6 
5040 N(x)=  
    7*x^7-336*x^6+6888*x^5-78120*x^4+528920*x^3-2135448*x^2+4753336*x-4491192 
     for  6 <x< 7 
5040 N(x)=  
    (-x^7)+56*x^6-1344*x^5+17920*x^4-143360*x^3+688128*x^2-1835008*x+2097152 
     for  7 <x< 8 
5040 N(x)=  0  for x> 8 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 4 )=  151/315  (center value) 
N( 9/2 )=  259723/645120 
N( 5 )=  397/1680 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-04-30 00:50:43.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-27 21:11:03.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 7  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 7 
            k=0       ( k )                           
             8      k ( 8 )      7 
7 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^7*unit_step(x)-8*unit_step(x-1)*x^7+28*unit_step(x-2)*x^7
                            -56*unit_step(x-3)*x^7+70*unit_step(x-4)*x^7
                            -56*unit_step(x-5)*x^7+28*unit_step(x-6)*x^7
                            -8*unit_step(x-7)*x^7+unit_step(x-8)*x^7
                            +56*unit_step(x-1)*x^6-392*unit_step(x-2)*x^6
                            +1176*unit_step(x-3)*x^6-1960*unit_step(x-4)*x^6
                            +1960*unit_step(x-5)*x^6-1176*unit_step(x-6)*x^6
                            +392*unit_step(x-7)*x^6-56*unit_step(x-8)*x^6
                            -168*unit_step(x-1)*x^5+2352*unit_step(x-2)*x^5
                            -10584*unit_step(x-3)*x^5+23520*unit_step(x-4)*x^5
                            -29400*unit_step(x-5)*x^5+21168*unit_step(x-6)*x^5
                            -8232*unit_step(x-7)*x^5+1344*unit_step(x-8)*x^5
                            +280*unit_step(x-1)*x^4-7840*unit_step(x-2)*x^4
                            +52920*unit_step(x-3)*x^4
                            -156800*unit_step(x-4)*x^4
                            +245000*unit_step(x-5)*x^4
                            -211680*unit_step(x-6)*x^4
                            +96040*unit_step(x-7)*x^4-17920*unit_step(x-8)*x^4
                            -280*unit_step(x-1)*x^3+15680*unit_step(x-2)*x^3
                            -158760*unit_step(x-3)*x^3
                            +627200*unit_step(x-4)*x^3
                            -1225000*unit_step(x-5)*x^3
                            +1270080*unit_step(x-6)*x^3
                            -672280*unit_step(x-7)*x^3
                            +143360*unit_step(x-8)*x^3+168*unit_step(x-1)*x^2
                            -18816*unit_step(x-2)*x^2
                            +285768*unit_step(x-3)*x^2
                            -1505280*unit_step(x-4)*x^2
                            +3675000*unit_step(x-5)*x^2
                            -4572288*unit_step(x-6)*x^2
                            +2823576*unit_step(x-7)*x^2
                            -688128*unit_step(x-8)*x^2-56*unit_step(x-1)*x
                            +12544*unit_step(x-2)*x-285768*unit_step(x-3)*x
                            +2007040*unit_step(x-4)*x-6125000*unit_step(x-5)*x
                            +9144576*unit_step(x-6)*x-6588344*unit_step(x-7)*x
                            +1835008*unit_step(x-8)*x+8*unit_step(x-1)
                            -3584*unit_step(x-2)+122472*unit_step(x-3)
                            -1146880*unit_step(x-4)+4375000*unit_step(x-5)
                            -7838208*unit_step(x-6)+6588344*unit_step(x-7)
                            -2097152*unit_step(x-8) 
------------------------------------------------------- 
5040 N(x)=  0  for x<=0 
5040 N(x)=  x^7  for  0 <x< 1 
5040 N(x)=  (-7*x^7)+56*x^6-168*x^5+280*x^4-280*x^3+168*x^2-56*x+8  for  1 <x<
     2 
5040 N(x)=  21*x^7-336*x^6+2184*x^5-7560*x^4+15400*x^3-18648*x^2+12488*x-3576 
     for  2 <x< 3 
5040 N(x)=  
    (-35*x^7)+840*x^6-8400*x^5+45360*x^4-143360*x^3+267120*x^2-273280*x+118896
      for  3 <x< 4 
5040 N(x)=  
    35*x^7-1120*x^6+15120*x^5-111440*x^4+483840*x^3-1238160*x^2+1733760*x
          -1027984  for  4 <x< 5 
5040 N(x)=  
    (-21*x^7)+840*x^6-14280*x^5+133560*x^4-741160*x^3+2436840*x^2-4391240*x
             +3347016  for  5 <x< 6 
5040 N(x)=  
    7*x^7-336*x^6+6888*x^5-78120*x^4+528920*x^3-2135448*x^2+4753336*x-4491192 
     for  6 <x< 7 
5040 N(x)=  
    (-x^7)+56*x^6-1344*x^5+17920*x^4-143360*x^3+688128*x^2-1835008*x+2097152 
     for  7 <x< 8 
5040 N(x)=  0  for x> 8 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 4 )=  151/315  (center value) 
N( 9/2 )=  259723/645120 
N( 5 )=  397/1680 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-27 21:11:04.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-27 21:11:41.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                            -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                            -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                            -3*unit_step(x-1)+12*unit_step(x-2)
                            -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  3/4  (center value) 
N( 2 )=  1/2 
N( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-27 21:11:41.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:22:13.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                            -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                            -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                            -3*unit_step(x-1)+12*unit_step(x-2)
                            -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  3/4  (center value) 
N( 2 )=  1/2 
N( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:22:13.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:23:36.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                            -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                            -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                            -3*unit_step(x-1)+12*unit_step(x-2)
                            -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  3/4  (center value) 
N( 2 )=  1/2 
N( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:23:36.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:23:56.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (x^2*unit_step(x))/4-(3*unit_step(x-1)*x^2)/4
                                +(3*unit_step(x-2)*x^2)/4
                                -(unit_step(x-3)*x^2)/4+(3*unit_step(x-1)*x)/2
                                -3*unit_step(x-2)*x+(3*unit_step(x-3)*x)/2
                                -(3*unit_step(x-1))/4+3*unit_step(x-2)
                                -(9*unit_step(x-3))/4 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2/4  for  0 <x< 1 
2 N(x)=  (-x^2/2)+(3*x)/2-3/4  for  1 <x< 2 
2 N(x)=  x^2/4-(3*x)/2+9/4  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  3/16  (center value) 
N( 2 )=  1/8 
N( 5/2 )=  1/32 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:23:56.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:25:32.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  
 (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)-(3*unit_step(2*x-1))/2+x^2 
  for  0 <x< 1 
2 N(x)=  
 (-20*x^2*unit_step(2*x-3))+60*x*unit_step(2*x-3)-45*unit_step(2*x-3)+10*x^2
                           -24*x+27/2  for  1 <x< 2 
2 N(x)=  
 (-6*x^2*unit_step(2*x-5))+30*x*unit_step(2*x-5)-(75*unit_step(2*x-5))/2+5*x^2
                          -24*x+57/2  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  0  (center value) 
N( 2 )=  1/4 
N( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:25:33.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:26:35.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  
 (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)-(3*unit_step(2*x-1))/2+x^2 
  for  0 <x< 1 
2 N(x)=  
 15*x^2*unit_step(2*x-2)-30*x*unit_step(2*x-2)+15*unit_step(2*x-2)-5*x^2+6*x
                        -3/2  for  0.5 <x< 1.5 
2 N(x)=  
 (-20*x^2*unit_step(2*x-3))+60*x*unit_step(2*x-3)-45*unit_step(2*x-3)+10*x^2
                           -24*x+27/2  for  1.0 <x< 2.0 
2 N(x)=  
 15*x^2*unit_step(2*x-4)-60*x*unit_step(2*x-4)+60*unit_step(2*x-4)-10*x^2+36*x
                        -63/2  for  1.5 <x< 2.5 
2 N(x)=  
 (-6*x^2*unit_step(2*x-5))+30*x*unit_step(2*x-5)-(75*unit_step(2*x-5))/2+5*x^2
                          -24*x+57/2  for  2.0 <x< 3.0 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  0  (center value) 
N( 2 )=  1/4 
N( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:26:35.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:28:02.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 0.5 
2 N(x)=  (-5*x^2)+6*x-3/2  for  0.5 <x< 1.0 
2 N(x)=  10*x^2-24*x+27/2  for  1.0 <x< 1.5 
2 N(x)=  (-10*x^2)+36*x-63/2  for  1.5 <x< 2.0 
2 N(x)=  5*x^2-24*x+57/2  for  2.0 <x< 2.5 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  0  (center value) 
N( 2 )=  1/4 
N( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:28:02.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:29:13.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
8 N(x)=  4*x^2  for  0 <x< 0.5 
8 N(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 N(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 N(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 N(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  0  (center value) 
N( 2 )=  1/4 
N( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:29:13.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:29:48.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 N(x)=  0  for x<=0 
8 N(x)=  4*x^2  for  0 <x< 0.5 
8 N(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 N(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 N(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 N(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  0  (center value) 
N( 2 )=  1/4 
N( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:29:48.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:33:55.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 N(x)=  0  for x<=0 
8 N(x)=  4*x^2  for  0 <x< 0.5 
8 N(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 N(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 N(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 N(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  0  (center value) 
N( 2 )=  1/4 
N( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:33:55.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:40:57.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 N(x)=  0  for x<=0 
8 N(x)=  4*x^2  for  0 <x< 0.5 
8 N(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 N(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 N(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 N(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 N(x)=  
 4*x^2*unit_step(2*x-6)-24*x*unit_step(2*x-6)+36*unit_step(2*x-6)-4*x^2+24*x
                       -36  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  0  (center value) 
N( 2 )=  1/4 
N( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:40:58.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:41:44.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 N(x)=  0  for x<=0 
8 N(x)=  4*x^2  for  0 <x< 0.5 
8 N(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 N(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 N(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 N(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  0  (center value) 
N( 2 )=  1/4 
N( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:41:45.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 03:42:36.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 N(x)=  0  for x<=0 
8 N(x)=  4*x^2  for  0 <x< 0.5 
8 N(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 N(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 N(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 N(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 N(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  0  (center value) 
N( 2 )=  1/4 
N( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 03:42:36.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 08:01:51.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 N(x)=  0  for x<=0 
8 N(x)=  4*x^2  for  0 <x< 0.5 
8 N(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 N(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 N(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 N(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 N(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  0  (center value) 
N( 2 )=  1/4 
N( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 08:01:52.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 08:03:10.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 08:03:10.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 12:23:49.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 12:23:50.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 12:28:00.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 12:28:00.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 12:28:09.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 12:28:09.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 12:28:28.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 12:28:29.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 21:22:23.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bwav.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 21:22:23.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 21:23:06.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bwav.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 21:23:06.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 21:24:50.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 21:24:51.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 21:25:06.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 3  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 3 
            k=0       ( k )                           
             4      k ( 4 )      3 
3 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-8*x^3*unit_step(2*x-1))+12*x^2*unit_step(2*x-1)
                                     -6*x*unit_step(2*x-1)+unit_step(2*x-1)
                                     +28*x^3*unit_step(2*x-2)
                                     -84*x^2*unit_step(2*x-2)
                                     +84*x*unit_step(2*x-2)
                                     -28*unit_step(2*x-2)
                                     -56*x^3*unit_step(2*x-3)
                                     +252*x^2*unit_step(2*x-3)
                                     -378*x*unit_step(2*x-3)
                                     +189*unit_step(2*x-3)
                                     +70*x^3*unit_step(2*x-4)
                                     -420*x^2*unit_step(2*x-4)
                                     +840*x*unit_step(2*x-4)
                                     -560*unit_step(2*x-4)
                                     -56*x^3*unit_step(2*x-5)
                                     +420*x^2*unit_step(2*x-5)
                                     -1050*x*unit_step(2*x-5)
                                     +875*unit_step(2*x-5)
                                     +28*x^3*unit_step(2*x-6)
                                     -252*x^2*unit_step(2*x-6)
                                     +756*x*unit_step(2*x-6)
                                     -756*unit_step(2*x-6)
                                     -8*x^3*unit_step(2*x-7)
                                     +84*x^2*unit_step(2*x-7)
                                     -294*x*unit_step(2*x-7)
                                     +343*unit_step(2*x-7)
                                     +x^3*unit_step(2*x-8)
                                     -12*x^2*unit_step(2*x-8)
                                     +48*x*unit_step(2*x-8)
                                     -64*unit_step(2*x-8)+x^3*unit_step(2*x) 
------------------------------------------------------- 
48 B(x)=  0  for x<=0 
48 B(x)=  8*x^3  for  0 <x< 0.5 
48 B(x)=  (-56*x^3)+96*x^2-48*x+8  for  0.5 <x< 1.0 
48 B(x)=  168*x^3-576*x^2+624*x-216  for  1.0 <x< 1.5 
48 B(x)=  (-280*x^3)+1440*x^2-2400*x+1296  for  1.5 <x< 2.0 
48 B(x)=  280*x^3-1920*x^2+4320*x-3184  for  2.0 <x< 2.5 
48 B(x)=  (-168*x^3)+1440*x^2-4080*x+3816  for  2.5 <x< 3.0 
48 B(x)=  56*x^3-576*x^2+1968*x-2232  for  3.0 <x< 3.5 
48 B(x)=  (-8*x^3)+96*x^2-384*x+512  for  3.5 <x< 4.0 
48 B(x)=  0  for x> 4 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 2 )=  1/3  (center value) 
B( 5/2 )=  -3/16 
B( 3 )=  0 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 21:25:07.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 21:25:24.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 1  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 1 
            k=0       ( k )                           
             2      k ( 2 )      1 
1 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-4*x*unit_step(2*x-1))+2*unit_step(2*x-1)+6*x*unit_step(2*x-2)
                                   -6*unit_step(2*x-2)-4*x*unit_step(2*x-3)
                                   +6*unit_step(2*x-3)+x*unit_step(2*x-4)
                                   -2*unit_step(2*x-4)+x*unit_step(2*x) 
------------------------------------------------------- 
2 B(x)=  0  for x<=0 
2 B(x)=  2*x  for  0 <x< 0.5 
2 B(x)=  4-6*x  for  0.5 <x< 1.0 
2 B(x)=  6*x-8  for  1.0 <x< 1.5 
2 B(x)=  4-2*x  for  1.5 <x< 2.0 
2 B(x)=  0  for x> 2 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 1 )=  -1  (center value) 
B( 3/2 )=  1/2 
B( 2 )=  0 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 21:25:24.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 21:44:48.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 0  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 0 
            k=0       ( k )                           
             1      k ( 1 )      0 
0 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  (-2*unit_step(2*x-1))+unit_step(2*x-2)+unit_step(2*x) 
------------------------------------------------------- 
1 B(x)=  0  for x<=0 
1 B(x)=  1  for  0 <x< 0.5 
1 B(x)=  -1  for  0.5 <x< 1.0 
1 B(x)=  0  for x> 1 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 1/2 )=  1  (center value) 
B( 1 )=  -1 
B( 3/2 )=  0 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 21:44:48.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-29 22:28:01.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 0  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 0 
            k=0       ( k )                           
             1      k ( 1 )      0 
0 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  (-2*unit_step(2*x-1))+unit_step(2*x-2)+unit_step(2*x) 
------------------------------------------------------- 
1 B(x)=  0  for x<=0 
1 B(x)=  1  for  0 <x< 0.5 
1 B(x)=  -1  for  0.5 <x< 1.0 
1 B(x)=  0  for x> 1 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 1/2 )=  1  (center value) 
B( 1 )=  -1 
B( 3/2 )=  0 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-29 22:28:02.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-30 00:41:23.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-30 00:41:23.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-30 00:45:04.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 1  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 1 
            k=0       ( k )                           
             2      k ( 2 )      1 
1 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-4*x*unit_step(2*x-1))+2*unit_step(2*x-1)+6*x*unit_step(2*x-2)
                                   -6*unit_step(2*x-2)-4*x*unit_step(2*x-3)
                                   +6*unit_step(2*x-3)+x*unit_step(2*x-4)
                                   -2*unit_step(2*x-4)+x*unit_step(2*x) 
------------------------------------------------------- 
2 B(x)=  0  for x<=0 
2 B(x)=  2*x  for  0 <x< 0.5 
2 B(x)=  4-6*x  for  0.5 <x< 1.0 
2 B(x)=  6*x-8  for  1.0 <x< 1.5 
2 B(x)=  4-2*x  for  1.5 <x< 2.0 
2 B(x)=  0  for x> 2 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 1 )=  -1  (center value) 
B( 3/2 )=  1/2 
B( 2 )=  0 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-30 00:45:04.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-30 00:49:15.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-30 00:49:16.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-30 00:50:57.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
               n+1     k (n+1)      n                    
 n!2^n Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
               k=0       ( k )                           
             3      k ( 3 )      2 
8 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-30 00:50:57.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-30 01:02:26.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
               n+1     k (n+1)      n                    
 n!2^n Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
               k=0       ( k )                           
             3      k ( 3 )      2 
8 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-30 01:02:27.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-06-30 01:02:32.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline wavelet Bn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bwaves.max 
====================================================================== 
------------------------------------------------------- 
               n+1     k (n+1)      n                    
 n!2^n Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
               k=0       ( k )                           
             3      k ( 3 )      2 
8 ! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            (-6*x^2*unit_step(2*x-1))+6*x*unit_step(2*x-1)
                                     -(3*unit_step(2*x-1))/2
                                     +15*x^2*unit_step(2*x-2)
                                     -30*x*unit_step(2*x-2)
                                     +15*unit_step(2*x-2)
                                     -20*x^2*unit_step(2*x-3)
                                     +60*x*unit_step(2*x-3)
                                     -45*unit_step(2*x-3)
                                     +15*x^2*unit_step(2*x-4)
                                     -60*x*unit_step(2*x-4)
                                     +60*unit_step(2*x-4)
                                     -6*x^2*unit_step(2*x-5)
                                     +30*x*unit_step(2*x-5)
                                     -(75*unit_step(2*x-5))/2
                                     +x^2*unit_step(2*x-6)
                                     -6*x*unit_step(2*x-6)+9*unit_step(2*x-6)
                                     +x^2*unit_step(2*x) 
------------------------------------------------------- 
8 B(x)=  0  for x<=0 
8 B(x)=  4*x^2  for  0 <x< 0.5 
8 B(x)=  (-20*x^2)+24*x-6  for  0.5 <x< 1.0 
8 B(x)=  40*x^2-96*x+54  for  1.0 <x< 1.5 
8 B(x)=  (-40*x^2)+144*x-126  for  1.5 <x< 2.0 
8 B(x)=  20*x^2-96*x+114  for  2.0 <x< 2.5 
8 B(x)=  (-4*x^2)+24*x-36  for  2.5 <x< 3.0 
8 B(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
B( 3/2 )=  0  (center value) 
B( 2 )=  1/4 
B( 5/2 )=  -1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-06-30 01:02:32.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-07-01 22:38:26.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 7  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 7 
            k=0       ( k )                           
             8      k ( 8 )      7 
7 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^7*unit_step(x)-8*unit_step(x-1)*x^7+28*unit_step(x-2)*x^7
                            -56*unit_step(x-3)*x^7+70*unit_step(x-4)*x^7
                            -56*unit_step(x-5)*x^7+28*unit_step(x-6)*x^7
                            -8*unit_step(x-7)*x^7+unit_step(x-8)*x^7
                            +56*unit_step(x-1)*x^6-392*unit_step(x-2)*x^6
                            +1176*unit_step(x-3)*x^6-1960*unit_step(x-4)*x^6
                            +1960*unit_step(x-5)*x^6-1176*unit_step(x-6)*x^6
                            +392*unit_step(x-7)*x^6-56*unit_step(x-8)*x^6
                            -168*unit_step(x-1)*x^5+2352*unit_step(x-2)*x^5
                            -10584*unit_step(x-3)*x^5+23520*unit_step(x-4)*x^5
                            -29400*unit_step(x-5)*x^5+21168*unit_step(x-6)*x^5
                            -8232*unit_step(x-7)*x^5+1344*unit_step(x-8)*x^5
                            +280*unit_step(x-1)*x^4-7840*unit_step(x-2)*x^4
                            +52920*unit_step(x-3)*x^4
                            -156800*unit_step(x-4)*x^4
                            +245000*unit_step(x-5)*x^4
                            -211680*unit_step(x-6)*x^4
                            +96040*unit_step(x-7)*x^4-17920*unit_step(x-8)*x^4
                            -280*unit_step(x-1)*x^3+15680*unit_step(x-2)*x^3
                            -158760*unit_step(x-3)*x^3
                            +627200*unit_step(x-4)*x^3
                            -1225000*unit_step(x-5)*x^3
                            +1270080*unit_step(x-6)*x^3
                            -672280*unit_step(x-7)*x^3
                            +143360*unit_step(x-8)*x^3+168*unit_step(x-1)*x^2
                            -18816*unit_step(x-2)*x^2
                            +285768*unit_step(x-3)*x^2
                            -1505280*unit_step(x-4)*x^2
                            +3675000*unit_step(x-5)*x^2
                            -4572288*unit_step(x-6)*x^2
                            +2823576*unit_step(x-7)*x^2
                            -688128*unit_step(x-8)*x^2-56*unit_step(x-1)*x
                            +12544*unit_step(x-2)*x-285768*unit_step(x-3)*x
                            +2007040*unit_step(x-4)*x-6125000*unit_step(x-5)*x
                            +9144576*unit_step(x-6)*x-6588344*unit_step(x-7)*x
                            +1835008*unit_step(x-8)*x+8*unit_step(x-1)
                            -3584*unit_step(x-2)+122472*unit_step(x-3)
                            -1146880*unit_step(x-4)+4375000*unit_step(x-5)
                            -7838208*unit_step(x-6)+6588344*unit_step(x-7)
                            -2097152*unit_step(x-8) 
------------------------------------------------------- 
5040 N(x)=  0  for x<=0 
5040 N(x)=  x^7  for  0 <x< 1 
5040 N(x)=  (-7*x^7)+56*x^6-168*x^5+280*x^4-280*x^3+168*x^2-56*x+8  for  1 <x<
     2 
5040 N(x)=  21*x^7-336*x^6+2184*x^5-7560*x^4+15400*x^3-18648*x^2+12488*x-3576 
     for  2 <x< 3 
5040 N(x)=  
    (-35*x^7)+840*x^6-8400*x^5+45360*x^4-143360*x^3+267120*x^2-273280*x+118896
      for  3 <x< 4 
5040 N(x)=  
    35*x^7-1120*x^6+15120*x^5-111440*x^4+483840*x^3-1238160*x^2+1733760*x
          -1027984  for  4 <x< 5 
5040 N(x)=  
    (-21*x^7)+840*x^6-14280*x^5+133560*x^4-741160*x^3+2436840*x^2-4391240*x
             +3347016  for  5 <x< 6 
5040 N(x)=  
    7*x^7-336*x^6+6888*x^5-78120*x^4+528920*x^3-2135448*x^2+4753336*x-4491192 
     for  6 <x< 7 
5040 N(x)=  
    (-x^7)+56*x^6-1344*x^5+17920*x^4-143360*x^3+688128*x^2-1835008*x+2097152 
     for  7 <x< 8 
5040 N(x)=  0  for x> 8 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 4 )=  151/315  (center value) 
N( 9/2 )=  259723/645120 
N( 5 )=  397/1680 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-07-01 22:38:26.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-07-01 22:39:43.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                            -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                            -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                            -3*unit_step(x-1)+12*unit_step(x-2)
                            -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  3/4  (center value) 
N( 2 )=  1/2 
N( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-07-01 22:39:43.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-07-01 22:57:16.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
            k=0       ( k )                           
             3      k ( 3 )      2 
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                            -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                            -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                            -3*unit_step(x-1)+12*unit_step(x-2)
                            -9*unit_step(x-3) 
------------------------------------------------------- 
2 N(x)=  0  for x<=0 
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
2 N(x)=  0  for x> 3 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 3/2 )=  3/4  (center value) 
N( 2 )=  1/2 
N( 5/2 )=  1/8 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-07-01 22:57:16.
;; Dribble of #<IO TERMINAL-STREAM> started on 2017-07-01 23:50:46.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
====================================================================== 
Daniel J. Greenhoe 
Output file for nth order B-spline Nn(x) calculation, n= 8  . 
Output produced using Maxima running the script file bspline.max 
====================================================================== 
------------------------------------------------------- 
            n+1     k (n+1)      n                    
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 8 
            k=0       ( k )                           
             9      k ( 9 )      8 
8 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
            k=0       ( k ) 
          =  
            x^8*unit_step(x)-9*unit_step(x-1)*x^8+36*unit_step(x-2)*x^8
                            -84*unit_step(x-3)*x^8+126*unit_step(x-4)*x^8
                            -126*unit_step(x-5)*x^8+84*unit_step(x-6)*x^8
                            -36*unit_step(x-7)*x^8+9*unit_step(x-8)*x^8
                            -unit_step(x-9)*x^8+72*unit_step(x-1)*x^7
                            -576*unit_step(x-2)*x^7+2016*unit_step(x-3)*x^7
                            -4032*unit_step(x-4)*x^7+5040*unit_step(x-5)*x^7
                            -4032*unit_step(x-6)*x^7+2016*unit_step(x-7)*x^7
                            -576*unit_step(x-8)*x^7+72*unit_step(x-9)*x^7
                            -252*unit_step(x-1)*x^6+4032*unit_step(x-2)*x^6
                            -21168*unit_step(x-3)*x^6+56448*unit_step(x-4)*x^6
                            -88200*unit_step(x-5)*x^6+84672*unit_step(x-6)*x^6
                            -49392*unit_step(x-7)*x^6+16128*unit_step(x-8)*x^6
                            -2268*unit_step(x-9)*x^6+504*unit_step(x-1)*x^5
                            -16128*unit_step(x-2)*x^5
                            +127008*unit_step(x-3)*x^5
                            -451584*unit_step(x-4)*x^5
                            +882000*unit_step(x-5)*x^5
                            -1016064*unit_step(x-6)*x^5
                            +691488*unit_step(x-7)*x^5
                            -258048*unit_step(x-8)*x^5
                            +40824*unit_step(x-9)*x^5-630*unit_step(x-1)*x^4
                            +40320*unit_step(x-2)*x^4
                            -476280*unit_step(x-3)*x^4
                            +2257920*unit_step(x-4)*x^4
                            -5512500*unit_step(x-5)*x^4
                            +7620480*unit_step(x-6)*x^4
                            -6050520*unit_step(x-7)*x^4
                            +2580480*unit_step(x-8)*x^4
                            -459270*unit_step(x-9)*x^4+504*unit_step(x-1)*x^3
                            -64512*unit_step(x-2)*x^3
                            +1143072*unit_step(x-3)*x^3
                            -7225344*unit_step(x-4)*x^3
                            +22050000*unit_step(x-5)*x^3
                            -36578304*unit_step(x-6)*x^3
                            +33882912*unit_step(x-7)*x^3
                            -16515072*unit_step(x-8)*x^3
                            +3306744*unit_step(x-9)*x^3-252*unit_step(x-1)*x^2
                            +64512*unit_step(x-2)*x^2
                            -1714608*unit_step(x-3)*x^2
                            +14450688*unit_step(x-4)*x^2
                            -55125000*unit_step(x-5)*x^2
                            +109734912*unit_step(x-6)*x^2
                            -118590192*unit_step(x-7)*x^2
                            +66060288*unit_step(x-8)*x^2
                            -14880348*unit_step(x-9)*x^2+72*unit_step(x-1)*x
                            -36864*unit_step(x-2)*x+1469664*unit_step(x-3)*x
                            -16515072*unit_step(x-4)*x
                            +78750000*unit_step(x-5)*x
                            -188116992*unit_step(x-6)*x
                            +237180384*unit_step(x-7)*x
                            -150994944*unit_step(x-8)*x
                            +38263752*unit_step(x-9)*x-9*unit_step(x-1)
                            +9216*unit_step(x-2)-551124*unit_step(x-3)
                            +8257536*unit_step(x-4)-49218750*unit_step(x-5)
                            +141087744*unit_step(x-6)-207532836*unit_step(x-7)
                            +150994944*unit_step(x-8)-43046721*unit_step(x-9) 
------------------------------------------------------- 
40320 N(x)=  0  for x<=0 
40320 N(x)=  x^8  for  0 <x< 1 
40320 N(x)=  (-8*x^8)+72*x^7-252*x^6+504*x^5-630*x^4+504*x^3-252*x^2+72*x-9 
      for  1 <x< 2 
40320 N(x)=  
     28*x^8-504*x^7+3780*x^6-15624*x^5+39690*x^4-64008*x^3+64260*x^2-36792*x
           +9207  for  2 <x< 3 
40320 N(x)=  
     (-56*x^8)+1512*x^7-17388*x^6+111384*x^5-436590*x^4+1079064*x^3
              -1650348*x^2+1432872*x-541917  for  3 <x< 4 
40320 N(x)=  
     70*x^8-2520*x^7+39060*x^6-340200*x^5+1821330*x^4-6146280*x^3+12800340*x^2
           -15082200*x+7715619  for  4 <x< 5 
40320 N(x)=  
     (-56*x^8)+2520*x^7-49140*x^6+541800*x^5-3691170*x^4+15903720*x^3
              -42324660*x^2+63667800*x-41503131  for  5 <x< 6 
40320 N(x)=  
     28*x^8-1512*x^7+35532*x^6-474264*x^5+3929310*x^4-20674584*x^3
           +67410252*x^2-124449192*x+99584613  for  6 <x< 7 
40320 N(x)=  
     (-8*x^8)+504*x^7-13860*x^6+217224*x^5-2121210*x^4+13208328*x^3
             -51179940*x^2+112731192*x-107948223  for  7 <x< 8 
40320 N(x)=  
     x^8-72*x^7+2268*x^6-40824*x^5+459270*x^4-3306744*x^3+14880348*x^2
        -38263752*x+43046721  for  8 <x< 9 
40320 N(x)=  0  for x> 9 
------------------------------------------------------- 
 values at some specific points x:                      
------------------------------------------------------- 
N( 9/2 )=  259723/573440  (center value) 
N( 5 )=  15619/40320 
N( 11/2 )=  310661/1290240 
;; Dribble of #<IO TERMINAL-STREAM> finished on 2017-07-01 23:50:47.
;; Dribble of #<IO TERMINAL-STREAM> started on 2018-07-11 07:35:26.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
(%o3) done
(%i4) n:2
(%o4) 2
(%i5) print("======================================================================")
====================================================================== 
(%o5) "======================================================================"
(%i6) print("Daniel J. Greenhoe")
Daniel J. Greenhoe 
(%o6) "Daniel J. Greenhoe"
(%i7) print("Output file for nth order B-spline Nn(x) calculation, n=",n," .")
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
(%o7) " ."
(%i8) print("Output produced using Maxima running the script file bspline.max")
Output produced using Maxima running the script file bspline.max 
(%o8) "Output produced using Maxima running the script file bspline.max"
(%i9) print("======================================================================")
====================================================================== 
(%o9) "======================================================================"
(%i10) Nnx:(1/n!)*sum((-1)^k*binomial(n+1,k)*(x-k)^n*unit_step(x-k),k,0,n+1)
(%o10) (x^2*unit_step(x)-3*unit_step(x-1)*(x-1)^2+3*unit_step(x-2)*(x-2)^2
                        -unit_step(x-3)*(x-3)^2)
 /2
(%i11) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o11) "-------------------------------------------------------"
(%i12) print("            n+1     k (n+1)      n                   ")
            n+1     k (n+1)      n                    
(%o12) "            n+1     k (n+1)      n                   "
(%i13) print(" n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n=",n)
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
(%o13) 2
(%i14) print("            k=0       ( k )                          ")
            k=0       ( k )                           
(%o14) "            k=0       ( k )                          "
(%i15) print("            ",n+1,"     k (",n+1,")     ",n)
             3      k ( 3 )      2 
(%o15) 2
(%i16) print(n,"! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k)")
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
(%o16) "! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k)"
(%i17) print("            k=0       ( k )")
            k=0       ( k ) 
(%o17) "            k=0       ( k )"
(%i18) print("          = ",expand(n!*Nnx))
          =  
            x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                            -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                            -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                            -3*unit_step(x-1)+12*unit_step(x-2)
                            -9*unit_step(x-3) 
(%o18) x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                       -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                       -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                       -3*unit_step(x-1)+12*unit_step(x-2)-9*unit_step(x-3)
(%i19) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o19) "-------------------------------------------------------"
(%i20) assume(x <= 0)
(%o20) [x <= 0]
(%i21) print(n!,"N(x)= ",expand(n!*Nnx)," for x<=0")
2 N(x)=  0  for x<=0 
(%o21) " for x<=0"
(%i22) forget(x <= 0)
(%o22) [x <= 0]
(%i23) for i from 0 thru n do
           (assume(x > i,x < i+1),
            print(n!,"N(x)= ",expand(n!*Nnx)," for ",i,"<x<",i+1),
            tex(expand(n!*Nnx),"djg.tex"),forget(x > i,x < i+1))
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
(%o23) done
(%i24) assume(x > n+1)
(%o24) [x > 3]
(%i25) print(n!,"N(x)= ",expand(n!*Nnx)," for x>",n+1)
2 N(x)=  0  for x> 3 
(%o25) 3
(%i26) forget(x > n+1)
(%o26) [x > 3]
(%i27) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o27) "-------------------------------------------------------"
(%i28) print(" values at some specific points x:                     ")
 values at some specific points x:                      
(%o28) " values at some specific points x:                     "
(%i29) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o29) "-------------------------------------------------------"
(%i30) ev(y:Nnx,x = (n+1)/2)
(%o30) 3/4
(%i31) print("N(",(n+1)/2,")= ",y," (center value)")
N( 3/2 )=  3/4  (center value) 
(%o31) " (center value)"
(%i32) ev(y:Nnx,x = (n+2)/2)
(%o32) 1/2
(%i33) print("N(",(n+2)/2,")= ",y)
N( 2 )=  1/2 
(%o33) 1/2
(%i34) ev(y:Nnx,x = (n+3)/2)
(%o34) 1/8
(%i35) print("N(",(n+3)/2,")= ",y)
N( 5/2 )=  1/8 
(%o35) 1/8
(%i36) closefile()
;; Dribble of #<IO TERMINAL-STREAM> finished on 2018-07-11 07:35:26.
;; Dribble of #<IO TERMINAL-STREAM> started on 2018-07-11 07:48:27.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
(%o3) done
(%i4) n:2
(%o4) 2
(%i5) print("======================================================================")
====================================================================== 
(%o5) "======================================================================"
(%i6) print("Daniel J. Greenhoe")
Daniel J. Greenhoe 
(%o6) "Daniel J. Greenhoe"
(%i7) print("Output file for nth order B-spline Nn(x) calculation, n=",n," .")
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
(%o7) " ."
(%i8) print("Output produced using Maxima running the script file bspline.max")
Output produced using Maxima running the script file bspline.max 
(%o8) "Output produced using Maxima running the script file bspline.max"
(%i9) print("======================================================================")
====================================================================== 
(%o9) "======================================================================"
(%i10) Nnx:(1/n!)*sum((-1)^k*binomial(n+1,k)*(x-k)^n*unit_step(x-k),k,0,n+1)
(%o10) (x^2*unit_step(x)-3*unit_step(x-1)*(x-1)^2+3*unit_step(x-2)*(x-2)^2
                        -unit_step(x-3)*(x-3)^2)
 /2
(%i11) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o11) "-------------------------------------------------------"
(%i12) print("            n+1     k (n+1)      n                   ")
            n+1     k (n+1)      n                    
(%o12) "            n+1     k (n+1)      n                   "
(%i13) print(" n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n=",n)
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
(%o13) 2
(%i14) print("            k=0       ( k )                          ")
            k=0       ( k )                           
(%o14) "            k=0       ( k )                          "
(%i15) print("            ",n+1,"     k (",n+1,")     ",n)
             3      k ( 3 )      2 
(%o15) 2
(%i16) print(n,"! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k)")
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
(%o16) "! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k)"
(%i17) print("            k=0       ( k )")
            k=0       ( k ) 
(%o17) "            k=0       ( k )"
(%i18) print("          = ",expand(n!*Nnx))
          =  
            x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                            -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                            -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                            -3*unit_step(x-1)+12*unit_step(x-2)
                            -9*unit_step(x-3) 
(%o18) x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                       -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                       -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                       -3*unit_step(x-1)+12*unit_step(x-2)-9*unit_step(x-3)
(%i19) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o19) "-------------------------------------------------------"
(%i20) assume(x <= 0)
(%o20) [x <= 0]
(%i21) print(n!,"N(x)= ",expand(n!*Nnx)," for x<=0")
2 N(x)=  0  for x<=0 
(%o21) " for x<=0"
(%i22) forget(x <= 0)
(%o22) [x <= 0]
(%i23) for i from 0 thru n do
           (assume(x > i,x < i+1),
            print(n!,"N(x)= ",expand(n!*Nnx)," for ",i,"<x<",i+1),
            tex(expand(n!*Nnx),"djg.tex"),forget(x > i,x < i+1))
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
(%o23) done
(%i24) assume(x > n+1)
(%o24) [x > 3]
(%i25) print(n!,"N(x)= ",expand(n!*Nnx)," for x>",n+1)
2 N(x)=  0  for x> 3 
(%o25) 3
(%i26) forget(x > n+1)
(%o26) [x > 3]
(%i27) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o27) "-------------------------------------------------------"
(%i28) print(" values at some specific points x:                     ")
 values at some specific points x:                      
(%o28) " values at some specific points x:                     "
(%i29) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o29) "-------------------------------------------------------"
(%i30) ev(y:Nnx,x = (n+1)/2)
(%o30) 3/4
(%i31) print("N(",(n+1)/2,")= ",y," (center value)")
N( 3/2 )=  3/4  (center value) 
(%o31) " (center value)"
(%i32) ev(y:Nnx,x = (n+2)/2)
(%o32) 1/2
(%i33) print("N(",(n+2)/2,")= ",y)
N( 2 )=  1/2 
(%o33) 1/2
(%i34) ev(y:Nnx,x = (n+3)/2)
(%o34) 1/8
(%i35) print("N(",(n+3)/2,")= ",y)
N( 5/2 )=  1/8 
(%o35) 1/8
(%i36) closefile()
;; Dribble of #<IO TERMINAL-STREAM> finished on 2018-07-11 07:48:27.
;; Dribble of #<IO TERMINAL-STREAM> started on 2018-07-11 07:49:38.
#<OUTPUT BUFFERED FILE-STREAM CHARACTER bsplineout.txt>
(%o3) done
(%i4) n:2
(%o4) 2
(%i5) print("======================================================================")
====================================================================== 
(%o5) "======================================================================"
(%i6) print("Daniel J. Greenhoe")
Daniel J. Greenhoe 
(%o6) "Daniel J. Greenhoe"
(%i7) print("Output file for nth order B-spline Nn(x) calculation, n=",n," .")
Output file for nth order B-spline Nn(x) calculation, n= 2  . 
(%o7) " ."
(%i8) print("Output produced using Maxima running the script file bspline.max")
Output produced using Maxima running the script file bspline.max 
(%o8) "Output produced using Maxima running the script file bspline.max"
(%i9) print("======================================================================")
====================================================================== 
(%o9) "======================================================================"
(%i10) Nnx:(1/n!)*sum((-1)^k*binomial(n+1,k)*(x-k)^n*unit_step(x-k),k,0,n+1)
(%o10) (x^2*unit_step(x)-3*unit_step(x-1)*(x-1)^2+3*unit_step(x-2)*(x-2)^2
                        -unit_step(x-3)*(x-3)^2)
 /2
(%i11) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o11) "-------------------------------------------------------"
(%i12) print("            n+1     k (n+1)      n                   ")
            n+1     k (n+1)      n                    
(%o12) "            n+1     k (n+1)      n                   "
(%i13) print(" n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n=",n)
 n! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n= 2 
(%o13) 2
(%i14) print("            k=0       ( k )                          ")
            k=0       ( k )                           
(%o14) "            k=0       ( k )                          "
(%i15) print("            ",n+1,"     k (",n+1,")     ",n)
             3      k ( 3 )      2 
(%o15) 2
(%i16) print(n,"! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k)")
2 ! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k) 
(%o16) "! Nn(x) = SUM (-1)  (   ) (x-k)  step(x-k)"
(%i17) print("            k=0       ( k )")
            k=0       ( k ) 
(%o17) "            k=0       ( k )"
(%i18) print("          = ",expand(n!*Nnx))
          =  
            x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                            -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                            -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                            -3*unit_step(x-1)+12*unit_step(x-2)
                            -9*unit_step(x-3) 
(%o18) x^2*unit_step(x)-3*unit_step(x-1)*x^2+3*unit_step(x-2)*x^2
                       -unit_step(x-3)*x^2+6*unit_step(x-1)*x
                       -12*unit_step(x-2)*x+6*unit_step(x-3)*x
                       -3*unit_step(x-1)+12*unit_step(x-2)-9*unit_step(x-3)
(%i19) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o19) "-------------------------------------------------------"
(%i20) assume(x <= 0)
(%o20) [x <= 0]
(%i21) print(n!,"N(x)= ",expand(n!*Nnx)," for x<=0")
2 N(x)=  0  for x<=0 
(%o21) " for x<=0"
(%i22) forget(x <= 0)
(%o22) [x <= 0]
(%i23) for i from 0 thru n do
           (assume(x > i,x < i+1),
            print(n!,"N(x)= ",expand(n!*Nnx)," for ",i,"<x<",i+1),
            tex(expand(n!*Nnx),"djg.tex"),forget(x > i,x < i+1))
2 N(x)=  x^2  for  0 <x< 1 
2 N(x)=  (-2*x^2)+6*x-3  for  1 <x< 2 
2 N(x)=  x^2-6*x+9  for  2 <x< 3 
(%o23) done
(%i24) assume(x > n+1)
(%o24) [x > 3]
(%i25) print(n!,"N(x)= ",expand(n!*Nnx)," for x>",n+1)
2 N(x)=  0  for x> 3 
(%o25) 3
(%i26) forget(x > n+1)
(%o26) [x > 3]
(%i27) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o27) "-------------------------------------------------------"
(%i28) print(" values at some specific points x:                     ")
 values at some specific points x:                      
(%o28) " values at some specific points x:                     "
(%i29) print("-------------------------------------------------------")
------------------------------------------------------- 
(%o29) "-------------------------------------------------------"
(%i30) ev(y:Nnx,x = (n+1)/2)
(%o30) 3/4
(%i31) print("N(",(n+1)/2,")= ",y," (center value)")
N( 3/2 )=  3/4  (center value) 
(%o31) " (center value)"
(%i32) ev(y:Nnx,x = (n+2)/2)
(%o32) 1/2
(%i33) print("N(",(n+2)/2,")= ",y)
N( 2 )=  1/2 
(%o33) 1/2
(%i34) ev(y:Nnx,x = (n+3)/2)
(%o34) 1/8
(%i35) print("N(",(n+3)/2,")= ",y)
N( 5/2 )=  1/8 
(%o35) 1/8
(%i36) closefile()
;; Dribble of #<IO TERMINAL-STREAM> finished on 2018-07-11 07:49:38.

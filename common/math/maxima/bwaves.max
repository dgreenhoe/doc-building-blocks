/*=========================================================================* 
 * Daniel J. Greenhoe                                                      * 
 * Maxima script file                                                      * 
 * To execute this script, start Maxima in a command window                * 
 * in the subdirectory containing this file (e.g. c:\math\maxima\)         * 
 * and then after the (%i...) prompt enter                                 * 
 *   batchload("bwaves.max")$                                             * 
 * Data produced will be written to the file "bwaveout.txt".             *
 * reference: http://maxima.sourceforge.net/documentation.html             * 
 *=========================================================================*/
/*--------------------------------------
 * initialize script
 *--------------------------------------*/
reset();
kill(all);
load(orthopoly);
display2d:false; /* 2-dimensional display */
writefile("bwaveout.txt");
/*--------------------------------------
 * n = B-spline order parameter
 * may be set to any value in {1,2,3,...}
 *--------------------------------------*/
n:5;
print("======================================================================");
print("Daniel J. Greenhoe");
print("Output file for nth order B-spline wavelet Bn(x) calculation, n=",n," .");
print("Output produced using Maxima running the script file bwaves.max");
print("======================================================================");
Bnx:(1/n!)*(1/2^n)*sum((-1)^k*binomial(n+1,k)
    *sum((-1)^m*binomial(n+1,m)*(2*x-m-k)^n*unit_step(2*x-m-k),m,0,n+1),k,0,n+1);
print("-------------------------------------------------------");
print("               n+1     k (n+1)      n                   ");
print(" n!2^n Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k) ,n=",n);
print("               k=0       ( k )                          ");
print("            ",n+1,"     k (",n+1,")     ",n);
print(n!*2^n,"! Bn(x) = SUM (-1)  (   ) (x-k)  step(x-k)");
print("            k=0       ( k )");
print("          = ",expand(n!*Bnx));
print("-------------------------------------------------------");
assume(x<=0);    print(n!*2^n,"B(x)= ",expand(n!*2^n*Bnx)," for x<=0");  forget(x<=0);
for i:0 thru (n+0.5) step 0.5 do(
  assume(x>i,x<(i+0.5)), 
  print(n!*2^n,"B(x)= ",expand(n!*2^n*Bnx)," for ",i,"<x<",i+0.5),
  tex(expand(n!*Bnx),"djg.tex"),/*write output in TeX format to file "djg.tex"*/
  forget(x>i,x<(i+0.5))
  );
assume(x>(n+1)); print(n!*2^n,"B(x)= ",expand(n!*2^n*Bnx)," for x>",n+1); forget(x>(n+1));
print("-------------------------------------------------------");
print(" values at some specific points x:                     ");
print("-------------------------------------------------------");
y:Bnx,x=(n+1)/2;print("B(",(n+1)/2,")= ",y," (center value)");
y:Bnx,x=(n+2)/2;print("B(",(n+2)/2,")= ",y);
y:Bnx,x=(n+3)/2;print("B(",(n+3)/2,")= ",y);
/*-------------------------------------
 * close output file
 *-------------------------------------*/
closefile();
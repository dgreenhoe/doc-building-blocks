#============================================================================
# Daniel J. Greenhoe
# GNU Ocatave file
# 1st order low pass filter design
#
#         a + bz^{-1}
# H(z) = -------------
#         1 + cz^{-1}
#                                                      _____
#     |    |           ( a + be^{-ipi})    a - b      |     |
# 0 = |H(z)|         = (--------------) = ------- ==> | a=b |
#     |    |z=e^{ipi}  ( 1 + ce^{-ipi})    1 - c      |_____|
#                                                                  _________
#     |    |           ( a + be^{-i0})    a + b                   |    c+1  |
# 1 = |H(z)|         = (-------------) = -------  ==> a+b=1+c ==> |a = ---- |
#     |    |z=e^{i0}   ( 1 + ce^{-i0})    1 + c                   |     2   |
#                                                                 |_________|
# Let v be the corner frequency
#
#  1    |    |2                   |           ( a + be^{-iv})( a + be^{-iv})*
# --- = |H(z)|         = H(z)H*(z)|         = (-------------)(-------------)
#  2    |    |z=e^{iv}            |z=e^{iv}   ( 1 + ce^{-iv})( 1 + ce^{-iv})
#
#       ( a + be^{-iv})( a + be^{iv})    a^2 + abe^{iv} + abe^{-iv} + b^2
#     = (-------------)(------------) = ----------------------------------
#       ( 1 + ce^{-iv})( 1 + ce^{iv})    1   + ce^{iv}  +  ce^{-iv} + c^2
#     
#        a^2 + 2ab cos(v) + b^2     a^2 + 2a^2 cos(v) + a^2 
#     = ------------------------ = ------------------------
#        1   + 2c  cos(v) + c^2     1   + 2c  cos(v) + c^2 
#    
#        2a^2 [1 + cos(v)]        2[(c+1)/2]^2 [1 + cos(v)]      
#     = ---------------------- = -------------------------- 
#        c^2  + 2c  cos(v) + 1    c^2  + 2c  cos(v) + 1     
#    
#        1     (c+1)^2 [1 + cos(v)]      
#     = --- -------------------------- 
#        2   c^2  + 2c  cos(v) + 1     
#    
# ==> c^2  + 2c cos(v) + 1 = (c+1)^2 [1 + cos(v)]      
# ==> c^2[1-1-cos(v)] + c[2cos(v)-2-2cos(v)] + [1-1-cos(v)] = 0
# ==> c^2[-cos(v)] + c[-2] + [-cos(v)] = 0
# ==> c^2[cos(v)] + 2c  -cos(v) = 0
#    
#         -2 +/- sqrt[4 - 4cos^2(v)]    -1 +/- sqrt[1 - 1cos^2(v)] 
# ==> c = --------------------------- = ---------------------------    
#                  2cos(v)                        cos(v)           
#                                   _________________
#         -1 +/- sqrt[sin^2(v)]    | -1 +/- sin(v)  |
#       = ---------------------- = | -------------- |
#                   cos(v)         |     cos(v)     |     
#                                  |________________|
#
# Note: In (-1 +/- sin(v)), consider using + for a pole inside the unit circle
#============================================================================
#---------------------------------------
# packages                              |
#---------------------------------------
pkg load signal
#---------------------------------------
# parameters                            |
#---------------------------------------
fc=0.75   % corner frequency: 0 <= fc <= 1 <-- corresponds to Fs/2 
N =1000   % number of data points
wc=fc*pi  % corner frequency: 0 <= wc <= pi
#---------------------------------------
# calculate coefficients (a,b,c)        |       
#           B(z)     a + bz^{-1}        |
#   H(z) = ------ = -------------       |
#           A(z)     1 + cz^{-1}        |
#---------------------------------------
 c  = (-1+sin(wc))/cos(wc);
 a  = (c+1)/2
 b  = a       
 Bz = [a b]  
 Az = [1 c]  
#---------------------------------------
# calculate impulse response            |
#           a + be^{-iw}                |
#   H(w) = -------------                |
#           1 + ce^{-iw}                |
#---------------------------------------
 [H,w]=freqz(Bz,Az,N);
#---------------------------------------
# Generate plots                        |
#---------------------------------------
plot(w/pi,abs(H));
pause();
zplane(Bz,Az);